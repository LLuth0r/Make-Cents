[{"/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/index.js":"1","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/App.js":"2","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/reportWebVitals.js":"3","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/services/index.js":"4","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/components/Home.jsx":"5","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/components/DollarSaved.jsx":"6","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/components/BudgetForm.jsx":"7","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/components/AddExpense.jsx":"8"},{"size":587,"mtime":1607121252042,"results":"9","hashOfConfig":"10"},{"size":1264,"mtime":1607454509131,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607103567151,"results":"12","hashOfConfig":"10"},{"size":331,"mtime":1607443804447,"results":"13","hashOfConfig":"10"},{"size":1587,"mtime":1607454257358,"results":"14","hashOfConfig":"10"},{"size":2878,"mtime":1607392648740,"results":"15","hashOfConfig":"10"},{"size":2698,"mtime":1607454098737,"results":"16","hashOfConfig":"10"},{"size":1838,"mtime":1607454571515,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1acxuzj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/index.js",[],["38","39"],"/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/App.js",["40","41","42"],"import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { baseURL, config } from './services'\nimport Home from './components/Home';\nimport DollarSaved from './components/DollarSaved';\nimport BudgetForm from './components/BudgetForm';\nimport AddExpense from './components/AddExpense';\n\nfunction App() {\n\n  const [dollars, setDollars] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [toggleFetch, setToggleFetch] = useState(false);\n\n\n  useEffect(() => {\n    async function getDollars() {\n      let response = await axios.get(baseURL, config);\n      setDollars(response.data.records);\n      // console.log(response);\n    }\n    getDollars();\n  }, [toggleFetch]);\n  // console.log(dollars);\n\n  return (\n    <div className=\"App\">\n        <Route path='/DollarSaved/:id'>\n        {dollars.map((dollar) => {\n          return <DollarSaved dollars={dollars} setToggleFetch={setToggleFetch} />\n        })}        \n      </Route>\n      <Route exact path='/'>\n        <Home dollars={dollars}/>\n      </Route>\n      <Route exact path='/Form'>\n        <AddExpense expenses={expenses}/>\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/reportWebVitals.js",[],"/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/services/index.js",[],"/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/components/Home.jsx",["43","44"],"import React from 'react'\nimport './Home.css';\nimport { Link } from 'react-router-dom';\n\nexport default function Home(props) {\n  // console.log(props.dollars);\n  if (props.dollars.length>0) {\n    return (\n      <div className=\"navbar\">\n        <h1 className=\"app-title\">Make Cent$</h1>\n        <div className=\"Dollars\">\n          <Link to={`/DollarSaved/${props.dollars[0].id}`} >\n            <div>\n              <img className=\"dollaricon\" src=\"https://res.cloudinary.com/decd84s0g/image/upload/v1607221870/Make%20Cents/bank.png\" />\n            </div>\n          </Link>\n          <p className=\"dollarsdesc\">If you saved just a dollar a day, how much would you save over the years?\n          You're never too old to start saving for your future.\n        </p>\n          <h2 className='pennies'>100 Pennies Make Cent$</h2>\n        </div>\n        <div className=\"Traveler\">\n          <p>Do you want to go back in time and be one of the early investors in Apple, Tesla,\n          Disney, or something else? Let's become...\n        </p>\n          <h2>Time Traveler$</h2>\n          <div className=\"Vacation\">\n            <Link to={`/Form/`} >\n            <div>\n              <img className=\"dollaricon\" src=\"https://res.cloudinary.com/decd84s0g/image/upload/v1607221870/Make%20Cents/bank.png\" />\n            </div>\n          </Link>\n            <p>Growing up sucks.  Bills, expenses, 10 car warranty calls a day, yuck.  Let's make budgeting fun and find those...</p>\n            <h2>Vacation Fund$</h2>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return <div></div>\n  }\n}","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/components/DollarSaved.jsx",[],"/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/components/BudgetForm.jsx",["45"],"import React from 'react'\nimport axios from 'axios';\nimport { budgetURL, config } from '../services';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\n\nexport default function BudgetForm(props) {\n\n  const [item, setItem] = useState('');\n  const [expenseCost, setExpenseCost] = useState('');\n  const [income, setIncome] = useState('');\n  \n  const history = useHistory();\n  const params = useParams();\n  console.log(params)\n\n  useEffect(() => {\n    if (params.id && props.expenses.length > 0) {\n      const expense = props.expenses.find((expense) => expense.id === params.id);\n      setItem(expense.fields.item);\n      setExpenseCost(expense.fields.expense_cost);\n      setIncome(expense.fields.income);\n    }\n  }, [props.expenses, params.id]);\n\nconst handleSubmit = async (e) => {\n    e.preventDefault();\n    const fields = {\n      item,\n      expenseCost,\n      income\n    };\n\n    if (params.id) {\n      const expenseURL = `${budgetURL}/${params.id}`\n      await axios.put(expenseURL, { fields }, config);\n      \n    } else {\n      await axios.post(budgetURL, { fields }, config);\n    }\n    props.setToggleFetch((prev) => !prev);\n    history.pushState('/')\n};\n  \n  const handleDelete = async () => {\n    const expenseURL = `${budgetURL}/${item.id}`;\n    await axios.delete(expenseURL, config);\n    props.setToggleFetch((prev) => !prev);\n    history.push('/')\n  };\n\n\n  \n\n  return (\n    <div className=\"navbar\">\n        <h1 className=\"app-title\">Vacation Fund$</h1>\n      <div className=\"Dollars\"></div>\n      <form onSubmit={handleSubmit}>\n      <div className='income'> \n        <label htmlFor='income'>Income</label>\n        <input\n          type='number'\n          name='income'\n          value={income}\n          onChange={(e) => {\n            setIncome(e.target.value);\n          }}\n        />\n          <button className='button'>Submit</button>\n          <button className='button'>Update</button>\n          </div>\n      <div className='expenseform'>\n        <label htmlFor='expense'>Expense Item:</label>\n        <input\n          type='text'\n          name='expense'\n          value={item}\n          onChange={(e) => {\n            setItem(e.target.value);\n          }}\n        />\n        <label htmlFor='expenseCost'>Expense Cost:</label>\n        <input\n          type='number'\n          name='expenseCost'\n          value={expenseCost}\n          onChange={(e) => {\n            setExpenseCost(e.target.value);\n          }}\n        />\n        {/* <button className='button' type='submit'>Add</button> */}\n          {/* <button className='button' onClick={handleDelete}>Delete</button> */}\n          </div>\n      </form>\n    </div>\n  )\n}\n","/Users/mikepakulak/General_Assembly/SEI/Garnet/Unit_2/project_2/make-cents/src/components/AddExpense.jsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":9,"column":8,"nodeType":"52","messageId":"53","endLine":9,"endColumn":18},{"ruleId":"50","severity":1,"message":"55","line":15,"column":20,"nodeType":"52","messageId":"53","endLine":15,"endColumn":31},{"ruleId":"56","severity":1,"message":"57","line":14,"column":15,"nodeType":"58","endLine":14,"endColumn":135},{"ruleId":"56","severity":1,"message":"57","line":30,"column":15,"nodeType":"58","endLine":30,"endColumn":135},{"ruleId":"50","severity":1,"message":"59","line":46,"column":9,"nodeType":"52","messageId":"53","endLine":46,"endColumn":21},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BudgetForm' is defined but never used.","'setExpenses' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]